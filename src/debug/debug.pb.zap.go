// Code generated by protoc-gen-zap (etc/proto/protoc-gen-zap). DO NOT EDIT.
//
// source: debug/debug.proto

package debug

import (
	protoextensions "github.com/pachyderm/pachyderm/v2/src/protoextensions"
	zapcore "go.uber.org/zap/zapcore"
)

func (x *ProfileRequest) MarshalLogObject(enc zapcore.ObjectEncoder) error {
	if x == nil {
		return nil
	}
	enc.AddObject("profile", x.Profile)
	enc.AddObject("filter", x.Filter)
	return nil
}

func (x *Profile) MarshalLogObject(enc zapcore.ObjectEncoder) error {
	if x == nil {
		return nil
	}
	enc.AddString("name", x.Name)
	protoextensions.AddDuration(enc, "duration", x.Duration)
	return nil
}

func (x *Filter) MarshalLogObject(enc zapcore.ObjectEncoder) error {
	if x == nil {
		return nil
	}
	enc.AddBool("pachd", x.GetPachd())
	enc.AddObject("pipeline", x.GetPipeline())
	enc.AddObject("worker", x.GetWorker())
	enc.AddBool("database", x.GetDatabase())
	return nil
}

func (x *Worker) MarshalLogObject(enc zapcore.ObjectEncoder) error {
	if x == nil {
		return nil
	}
	enc.AddString("pod", x.Pod)
	enc.AddBool("redirected", x.Redirected)
	return nil
}

func (x *BinaryRequest) MarshalLogObject(enc zapcore.ObjectEncoder) error {
	if x == nil {
		return nil
	}
	enc.AddObject("filter", x.Filter)
	return nil
}

func (x *DumpRequest) MarshalLogObject(enc zapcore.ObjectEncoder) error {
	if x == nil {
		return nil
	}
	enc.AddObject("filter", x.Filter)
	enc.AddInt64("limit", x.Limit)
	return nil
}

func (x *SetLogLevelRequest) MarshalLogObject(enc zapcore.ObjectEncoder) error {
	if x == nil {
		return nil
	}
	enc.AddString("pachyderm", x.GetPachyderm().String())
	enc.AddString("grpc", x.GetGrpc().String())
	protoextensions.AddDuration(enc, "duration", x.Duration)
	enc.AddBool("recurse", x.Recurse)
	return nil
}

func (x *SetLogLevelResponse) MarshalLogObject(enc zapcore.ObjectEncoder) error {
	if x == nil {
		return nil
	}
	affected_podsArrMarshaller := func(enc zapcore.ArrayEncoder) error {
		for _, v := range x.AffectedPods {
			enc.AppendString(v)
		}
		return nil
	}
	enc.AddArray("affected_pods", zapcore.ArrayMarshalerFunc(affected_podsArrMarshaller))
	errored_podsArrMarshaller := func(enc zapcore.ArrayEncoder) error {
		for _, v := range x.ErroredPods {
			enc.AppendString(v)
		}
		return nil
	}
	enc.AddArray("errored_pods", zapcore.ArrayMarshalerFunc(errored_podsArrMarshaller))
	return nil
}

func (x *GetDumpV2TemplateRequest) MarshalLogObject(enc zapcore.ObjectEncoder) error {
	if x == nil {
		return nil
	}
	filtersArrMarshaller := func(enc zapcore.ArrayEncoder) error {
		for _, v := range x.Filters {
			enc.AppendString(v)
		}
		return nil
	}
	enc.AddArray("filters", zapcore.ArrayMarshalerFunc(filtersArrMarshaller))
	return nil
}

func (x *GetDumpV2TemplateResponse) MarshalLogObject(enc zapcore.ObjectEncoder) error {
	if x == nil {
		return nil
	}
	enc.AddObject("request", x.Request)
	return nil
}

func (x *PachdDump) MarshalLogObject(enc zapcore.ObjectEncoder) error {
	if x == nil {
		return nil
	}
	enc.AddBool("describe", x.Describe)
	enc.AddBool("logs", x.Logs)
	enc.AddBool("loki_logs", x.LokiLogs)
	return nil
}

func (x *AppDump) MarshalLogObject(enc zapcore.ObjectEncoder) error {
	if x == nil {
		return nil
	}
	enc.AddBool("input_repos", x.InputRepos)
	return nil
}

func (x *WorkerDump) MarshalLogObject(enc zapcore.ObjectEncoder) error {
	if x == nil {
		return nil
	}
	enc.AddString("pod", x.Pod)
	return nil
}

func (x *PipelineDump) MarshalLogObject(enc zapcore.ObjectEncoder) error {
	if x == nil {
		return nil
	}
	enc.AddString("name", x.Name)
	tasksArrMarshaller := func(enc zapcore.ArrayEncoder) error {
		for _, v := range x.Tasks {
			enc.AppendObject(v)
		}
		return nil
	}
	enc.AddArray("tasks", zapcore.ArrayMarshalerFunc(tasksArrMarshaller))
	return nil
}

func (x *PipelinesDump) MarshalLogObject(enc zapcore.ObjectEncoder) error {
	if x == nil {
		return nil
	}
	tasksArrMarshaller := func(enc zapcore.ArrayEncoder) error {
		for _, v := range x.Tasks {
			enc.AppendObject(v)
		}
		return nil
	}
	enc.AddArray("tasks", zapcore.ArrayMarshalerFunc(tasksArrMarshaller))
	return nil
}

func (x *SystemDump) MarshalLogObject(enc zapcore.ObjectEncoder) error {
	if x == nil {
		return nil
	}
	enc.AddBool("version", x.Version)
	enc.AddBool("helm", x.Helm)
	enc.AddBool("profile", x.Profile)
	return nil
}

func (x *DumpV2Request) MarshalLogObject(enc zapcore.ObjectEncoder) error {
	if x == nil {
		return nil
	}
	enc.AddObject("system_dump", x.SystemDump)
	enc.AddObject("pachd_dump", x.PachdDump)
	enc.AddObject("pipelines_dump", x.PipelinesDump)
	enc.AddObject("app_dump", x.AppDump)
	return nil
}

func (x *DumpContent) MarshalLogObject(enc zapcore.ObjectEncoder) error {
	if x == nil {
		return nil
	}
	protoextensions.AddBytes(enc, "content", x.Content)
	return nil
}

func (x *DumpProgress) MarshalLogObject(enc zapcore.ObjectEncoder) error {
	if x == nil {
		return nil
	}
	enc.AddString("task", x.Task)
	enc.AddInt64("total", x.Total)
	enc.AddInt64("progress", x.Progress)
	return nil
}

func (x *DumpChunk) MarshalLogObject(enc zapcore.ObjectEncoder) error {
	if x == nil {
		return nil
	}
	enc.AddObject("content", x.GetContent())
	enc.AddObject("progress", x.GetProgress())
	return nil
}
