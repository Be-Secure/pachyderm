{
  "swagger": "2.0",
  "info": {
    "title": "auth/auth.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "API"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {},
  "definitions": {
    "auth_v2ActivateResponse": {
      "type": "object",
      "properties": {
        "pachToken": {
          "type": "string",
          "title": "pach_token authenticates the caller with Pachyderm (if you want to perform\nPachyderm operations after auth has been activated as themselves, you must\npresent this token along with your regular request)"
        }
      }
    },
    "auth_v2AuthenticateResponse": {
      "type": "object",
      "properties": {
        "pachToken": {
          "type": "string",
          "title": "pach_token authenticates the caller with Pachyderm (if you want to perform\nPachyderm operations after auth has been activated as themselves, you must\npresent this token along with your regular request)"
        }
      }
    },
    "auth_v2AuthorizeResponse": {
      "type": "object",
      "properties": {
        "authorized": {
          "type": "boolean",
          "title": "authorized is true if the caller has the require permissions"
        },
        "satisfied": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/auth_v2Permission"
          },
          "title": "satisfied is the set of permission that the principal has"
        },
        "missing": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/auth_v2Permission"
          },
          "title": "missing is the set of permissions that the principal lacks"
        },
        "principal": {
          "type": "string",
          "title": "principal is the principal the request was evaluated for"
        }
      }
    },
    "auth_v2DeactivateResponse": {
      "type": "object"
    },
    "auth_v2DeleteExpiredAuthTokensResponse": {
      "type": "object"
    },
    "auth_v2ExtractAuthTokensResponse": {
      "type": "object",
      "properties": {
        "tokens": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/auth_v2TokenInfo"
          }
        }
      }
    },
    "auth_v2GetConfigurationResponse": {
      "type": "object",
      "properties": {
        "configuration": {
          "$ref": "#/definitions/auth_v2OIDCConfig"
        }
      }
    },
    "auth_v2GetGroupsResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "auth_v2GetOIDCLoginResponse": {
      "type": "object",
      "properties": {
        "loginUrl": {
          "type": "string",
          "title": "The login URL generated for the OIDC object"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "auth_v2GetPermissionsResponse": {
      "type": "object",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/auth_v2Permission"
          },
          "title": "permissions is the set of permissions the principal has"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "roles is the set of roles the principal has"
        }
      }
    },
    "auth_v2GetRobotTokenResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "title": "A new auth token for the requested robot"
        }
      }
    },
    "auth_v2GetRoleBindingResponse": {
      "type": "object",
      "properties": {
        "binding": {
          "$ref": "#/definitions/auth_v2RoleBinding"
        }
      }
    },
    "auth_v2GetRolesForPermissionResponse": {
      "type": "object",
      "properties": {
        "roles": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/auth_v2Role"
          }
        }
      }
    },
    "auth_v2GetUsersResponse": {
      "type": "object",
      "properties": {
        "usernames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "auth_v2ModifyMembersResponse": {
      "type": "object"
    },
    "auth_v2ModifyRoleBindingResponse": {
      "type": "object"
    },
    "auth_v2OIDCConfig": {
      "type": "object",
      "properties": {
        "issuer": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        },
        "redirectUri": {
          "type": "string"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "requireEmailVerified": {
          "type": "boolean"
        },
        "localhostIssuer": {
          "type": "boolean",
          "description": "localhost_issuer ignores the contents of the issuer claim and makes all\nOIDC requests to the embedded OIDC provider. This is necessary to support\nsome network configurations like Minikube."
        },
        "userAccessibleIssuerHost": {
          "type": "string",
          "description": "user_accessible_issuer_host can be set to override the host used\nin the OAuth2 authorization URL in case the OIDC issuer isn't\naccessible outside the cluster. This requires a fully formed URL with scheme of either http or https.\nThis is necessary to support some configurations like Minikube."
        }
      },
      "title": "Configure Pachyderm's auth system with an OIDC provider"
    },
    "auth_v2Permission": {
      "type": "string",
      "enum": [
        "PERMISSION_UNKNOWN",
        "CLUSTER_MODIFY_BINDINGS",
        "CLUSTER_GET_BINDINGS",
        "CLUSTER_GET_PACHD_LOGS",
        "CLUSTER_GET_LOKI_LOGS",
        "CLUSTER_AUTH_ACTIVATE",
        "CLUSTER_AUTH_DEACTIVATE",
        "CLUSTER_AUTH_GET_CONFIG",
        "CLUSTER_AUTH_SET_CONFIG",
        "CLUSTER_AUTH_GET_ROBOT_TOKEN",
        "CLUSTER_AUTH_MODIFY_GROUP_MEMBERS",
        "CLUSTER_AUTH_GET_GROUPS",
        "CLUSTER_AUTH_GET_GROUP_USERS",
        "CLUSTER_AUTH_EXTRACT_TOKENS",
        "CLUSTER_AUTH_RESTORE_TOKEN",
        "CLUSTER_AUTH_GET_PERMISSIONS_FOR_PRINCIPAL",
        "CLUSTER_AUTH_DELETE_EXPIRED_TOKENS",
        "CLUSTER_AUTH_REVOKE_USER_TOKENS",
        "CLUSTER_AUTH_ROTATE_ROOT_TOKEN",
        "CLUSTER_ENTERPRISE_ACTIVATE",
        "CLUSTER_ENTERPRISE_HEARTBEAT",
        "CLUSTER_ENTERPRISE_GET_CODE",
        "CLUSTER_ENTERPRISE_DEACTIVATE",
        "CLUSTER_ENTERPRISE_PAUSE",
        "CLUSTER_IDENTITY_SET_CONFIG",
        "CLUSTER_IDENTITY_GET_CONFIG",
        "CLUSTER_IDENTITY_CREATE_IDP",
        "CLUSTER_IDENTITY_UPDATE_IDP",
        "CLUSTER_IDENTITY_LIST_IDPS",
        "CLUSTER_IDENTITY_GET_IDP",
        "CLUSTER_IDENTITY_DELETE_IDP",
        "CLUSTER_IDENTITY_CREATE_OIDC_CLIENT",
        "CLUSTER_IDENTITY_UPDATE_OIDC_CLIENT",
        "CLUSTER_IDENTITY_LIST_OIDC_CLIENTS",
        "CLUSTER_IDENTITY_GET_OIDC_CLIENT",
        "CLUSTER_IDENTITY_DELETE_OIDC_CLIENT",
        "CLUSTER_DEBUG_DUMP",
        "CLUSTER_LICENSE_ACTIVATE",
        "CLUSTER_LICENSE_GET_CODE",
        "CLUSTER_LICENSE_ADD_CLUSTER",
        "CLUSTER_LICENSE_UPDATE_CLUSTER",
        "CLUSTER_LICENSE_DELETE_CLUSTER",
        "CLUSTER_LICENSE_LIST_CLUSTERS",
        "CLUSTER_CREATE_SECRET",
        "CLUSTER_LIST_SECRETS",
        "SECRET_DELETE",
        "SECRET_INSPECT",
        "CLUSTER_DELETE_ALL",
        "REPO_READ",
        "REPO_WRITE",
        "REPO_MODIFY_BINDINGS",
        "REPO_DELETE",
        "REPO_INSPECT_COMMIT",
        "REPO_LIST_COMMIT",
        "REPO_DELETE_COMMIT",
        "REPO_CREATE_BRANCH",
        "REPO_LIST_BRANCH",
        "REPO_DELETE_BRANCH",
        "REPO_INSPECT_FILE",
        "REPO_LIST_FILE",
        "REPO_ADD_PIPELINE_READER",
        "REPO_REMOVE_PIPELINE_READER",
        "REPO_ADD_PIPELINE_WRITER",
        "PIPELINE_LIST_JOB",
        "CLUSTER_SET_DEFAULTS",
        "PROJECT_CREATE",
        "PROJECT_DELETE",
        "PROJECT_LIST_REPO",
        "PROJECT_CREATE_REPO",
        "PROJECT_MODIFY_BINDINGS"
      ],
      "default": "PERMISSION_UNKNOWN",
      "description": "- CLUSTER_CREATE_SECRET: TODO(actgardner): Make k8s secrets into nouns and add an Update RPC\n - CLUSTER_SET_DEFAULTS: CLUSTER_SET_DEFAULTS is part of PPS.",
      "title": "Permission represents the ability to perform a given operation on a Resource"
    },
    "auth_v2Resource": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/auth_v2ResourceType"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "Resource represents any resource that has role-bindings in the system"
    },
    "auth_v2ResourceType": {
      "type": "string",
      "enum": [
        "RESOURCE_TYPE_UNKNOWN",
        "CLUSTER",
        "REPO",
        "SPEC_REPO",
        "PROJECT"
      ],
      "default": "RESOURCE_TYPE_UNKNOWN",
      "title": "ResourceType represents the type of a Resource"
    },
    "auth_v2RestoreAuthTokenResponse": {
      "type": "object"
    },
    "auth_v2RevokeAuthTokenResponse": {
      "type": "object",
      "properties": {
        "number": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "auth_v2RevokeAuthTokensForUserResponse": {
      "type": "object",
      "properties": {
        "number": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "auth_v2Role": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/auth_v2Permission"
          }
        },
        "canBeBoundTo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/auth_v2ResourceType"
          },
          "description": "Resources this role can be bound to.  For example, you can't apply clusterAdmin to a repo, so\nREPO would not be listed here."
        },
        "returnedFor": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/auth_v2ResourceType"
          },
          "description": "Resources this role is returned for.  For example, a principal might have clusterAdmin\npermissions on the cluster, and this is what allows them to write to a repo.  So, clusterAdmin\nis returned for the repo, even though it cannot be bound to a repo."
        }
      }
    },
    "auth_v2RoleBinding": {
      "type": "object",
      "properties": {
        "entries": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/auth_v2Roles"
          },
          "description": "principal -\u003e roles. All principal names include the structured prefix indicating their type."
        }
      },
      "title": "RoleBinding represents the set of roles principals have on a given Resource"
    },
    "auth_v2Roles": {
      "type": "object",
      "properties": {
        "roles": {
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          }
        }
      },
      "title": "Roles represents the set of roles a principal has"
    },
    "auth_v2RotateRootTokenResponse": {
      "type": "object",
      "properties": {
        "rootToken": {
          "type": "string"
        }
      }
    },
    "auth_v2SetConfigurationResponse": {
      "type": "object"
    },
    "auth_v2SetGroupsForUserResponse": {
      "type": "object"
    },
    "auth_v2TokenInfo": {
      "type": "object",
      "properties": {
        "subject": {
          "type": "string",
          "description": "Subject (i.e. Pachyderm account) that a given token authorizes.\nSee the note at the top of the doc for an explanation of subject structure."
        },
        "expiration": {
          "type": "string",
          "format": "date-time"
        },
        "hashedToken": {
          "type": "string"
        }
      },
      "title": "TokenInfo is the 'value' of an auth token 'key' in the 'tokens' collection"
    },
    "auth_v2WhoAmIResponse": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "expiration": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
