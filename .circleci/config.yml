version: 2.1

jobs:
  build:
    parameters:
      python-version:
        type: string
    docker:
      - image: cimg/python:<< parameters.python-version >>-node
    steps:
      - checkout

      # Install and cache Python dependencies
      - restore_cache:
          key: pip<< parameters.python-version >>-cache-v1-{{ checksum "ci-requirements.txt" }}
      - run:
          name: "Install Python dependencies"
          command: |
            python -m venv venv
            . venv/bin/activate
            python -m pip install -r ci-requirements.txt
      - save_cache:
          key: pip<< parameters.python-version >>-cache-v1-{{ checksum "ci-requirements.txt" }}
          paths:
            - "venv"

      # Install and cache Node dependencies
      - restore_cache:
          keys:
            - node-cache-v2-{{ checksum "package-lock.json" }}
            - node-cache-v2
      - run:
          name: "Install npm packages"
          command: |
            npm ci
            npx playwright install-deps  # required for browser_check 
      - save_cache:
          key: node-cache-v2-{{ checksum "package-lock.json" }}
          paths:
            - "node_modules"

      - run:
          name: "Build and test the extension"
          command: |
            set -eux

            . venv/bin/activate
            npm run eslint:check
            python -m pip install -e '.[dev]'

            # Run Python unit tests
            pytest jupyterlab_pachyderm

            # Uninstall local package for fresh install
            python -m pip uninstall -y jupyterlab-pachyderm

            # Run integration test
            python -m pip install .
            
            jupyter server extension list 2>&1 | grep -ie "jupyterlab_pachyderm.*OK"
            jupyter labextension list 2>&1 | grep -ie "jupyterlab-pachyderm.*OK"
            python -m jupyterlab.browser_check

            check-manifest -v
  frontend-test:
    resource_class: xlarge
    docker:
      - image: cimg/node:16.11.0
    steps:
      - checkout
      - run: npm ci
      - run: npm run test
  mock-e2e:
    docker:
      - image: cimg/python
    steps:
      - checkout
      - run:
          name: "Install Python dependencies"
          command: |
            python -m venv venv
            . venv/bin/activate
            python -m pip install -r ci-requirements.txt
            pip install -e .
            jupyter labextension develop . --overwrite
            jupyter server extension enable jupyterlab_pachyderm
      - run: npm run e2e
workflows:
  build-workflow:
    jobs:
      - build:
          matrix:
            parameters:
              python-version: ["3.6", "3.7", "3.8", "3.9"]
      - frontend-test
      - mock-e2e
