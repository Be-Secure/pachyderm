load("//private/rules:rules.bzl", "host_native_binary")

host_native_binary(
    name = "protoc-gen-go",
    repo = "@com_github_protocolbuffers_protobuf_go_protoc_gen_go",
    target = ":protoc-gen-go",
)

host_native_binary(
    name = "protoc-gen-validate-go",
    repo = "@com_github_bufbuild_protoc_gen_validate",
    target = ":protoc-gen-validate-go",
)

host_native_binary(
    name = "protoc-gen-doc",
    repo = "@com_github_pseudomuto_protoc_gen_doc",
    target = ":protoc-gen-doc",
)

host_native_binary(
    name = "protoc-gen-openapiv2",
    repo = "@com_github_grpc_ecosystem_grpc_gateway_protoc_gen_openapiv2",
    target = "file:protoc-gen-openapiv2",
)

host_native_binary(
    name = "protoc-gen-grpc-gateway",
    repo = "@com_github_grpc_ecosystem_grpc_gateway_protoc_gen_grpc_gateway",
    target = "file:protoc-gen-grpc-gateway",
)

host_native_binary(
    name = "protoc-gen-grpc-gateway-ts",
    repo = "@com_github_grpc_ecosystem_grpc_gateway_protoc_gen_grpc_gateway_ts",
    target = ":protoc-gen-grpc-gateway-ts",
)

host_native_binary(
    name = "gopatch",
    repo = "@org_uber_go_gopatch",
    target = ":gopatch",
)

# bazel build //etc/proto:run will regenerate the protos in your working copy.
sh_binary(
    name = "run",
    srcs = ["run.sh"],
    data = [
        ":gopatch",
        ":proto.patch",
        ":protoc-gen-doc",
        ":protoc-gen-go",
        ":protoc-gen-grpc-gateway",
        ":protoc-gen-grpc-gateway-ts",
        ":protoc-gen-openapiv2",
        ":protoc-gen-validate-go",
        "//etc/proto/pachgen",
        "//etc/proto/protoc-gen-zap",
        "@com_github_chrusty_protoc_gen_jsonschema//cmd/protoc-gen-jsonschema",
        "@com_google_protobuf//:descriptor_proto_srcs",
        "@com_google_protobuf//:protoc",
        "@com_google_protobuf//:well_known_type_protos",
        "@go_sdk//:bin/gofmt",
        "@org_golang_google_grpc_cmd_protoc_gen_go_grpc//:protoc-gen-go-grpc",
    ],
    deps = ["@bazel_tools//tools/bash/runfiles"],
)
